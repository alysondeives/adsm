/**
 * \file util/Parameter-def.h
 *
 * GMAC run-time parameters' definition
 */

// GMAC global settings
PARAM(Protocol, const char *, "Rolling", "GMAC_PROTOCOL")
PARAM(Allocator, const char *, "Slab", "GMAC_ALLOCATOR")
//PARAM(AcquireOnWrite, bool, false, "GMAC_ACQUIRE_ON_WRITE")
PARAM(IOMemory, unsigned, 16 * 1024 * 1024, "GMAC_IOMEMORY")
PARAM(AutoSync, bool, false, "GMAC_AUTOSYNC")

// GMAC debug settings
PARAM(Debug, const char *, "none", "GMAC_DEBUG")
PARAM(DebugPrintFile, bool, false, "GMAC_DEBUG_PRINT_FILE")
PARAM(DebugPrintLocation, bool, false, "GMAC_DEBUG_PRINT_LOCATION")
PARAM(DebugUseFinalClass, bool, false, "GMAC_DEBUG_USE_FINAL_CLASS")
PARAM(DebugUseRealTID, bool, false, "GMAC_DEBUG_USE_REAL_TID")
PARAM(DebugPrintDebugInfo, bool, false, "GMAC_DEBUG_PRINT_INFO")
PARAM(Verbose, bool, false, "GMAC_VERBOSE")
PARAM(Stats, bool, false, "GMAC_STATS")
//PARAM(DebugFile, const char *, NULL, "GMAC_DEBUG_FILE")

// GMAC tracing
PARAM(Trace, const char *, "trace", "GMAC_TRACE")

// GMAC HAL settings
PARAM(HALInputBuffersPerContext,  unsigned, 3, "GMAC_HAL_CONTEXT_INPUT_BUFFERS")
PARAM(HALOutputBuffersPerContext, unsigned, 3, "GMAC_HAL_CONTEXT_OUTPUT_BUFFERS")

// GMAC Page table settings
PARAM(BlockSize, long_t, @GMAC_BLOCK_SIZE@, "GMAC_BLOCK_SIZE", PARAM_NONZERO)

// GMAC Memcpy settings
PARAM(MemcpyAccToAcc, bool, true, "GMAC_MEMCPY_ACCTOACC")

// Rolling Manager specific settings
//PARAM(RollSize, unsigned, 2, "GMAC_ROLL_SIZE", PARAM_NONZERO)
PARAM(RollThreshold, unsigned, 4, "GMAC_ROLL_THRESHOLD", PARAM_NONZERO)

// Miscelaneous Parameters
PARAM(PrintParams, bool, false, "GMAC_PRINT_PARAMS")

// OpenCL Parameters
PARAM(OpenCLSources, const char *, "", "GMAC_OPENCL_SOURCES")
PARAM(OpenCLFlags,   const char *, "", "GMAC_OPENCL_FLAGS")

// Bitmap Parameters
PARAM(SubBlockSize, unsigned, 4 * 1024, "GMAC_SUBBLOCK_SIZE", PARAM_NONZERO)
PARAM(SubBlockStride, bool, true, "GMAC_SUBBLOCK_STRIDE")
PARAM(SubBlockTree, bool, true, "GMAC_SUBBLOCK_TREE")

PARAM(GatherRatio, float, 0.2f, "GMAC_GATHER_RATIO")
PARAM(BitmapLevels, unsigned, 3, "GMAC_BITMAP_LEVELS", PARAM_NONZERO)
PARAM(BitmapL1Entries, unsigned, 512, "GMAC_BITMAP_L1ENTRIES", PARAM_NONZERO)
PARAM(BitmapL2Entries, unsigned, 128, "GMAC_BITMAP_L2ENTRIES", PARAM_NONZERO)
PARAM(BitmapL3Entries, unsigned, 4096, "GMAC_BITMAP_L3ENTRIES", PARAM_NONZERO)

// GMAC Parameters for auto-tunning
PARAM(ModelToHostConfig, float, 40.0, "GMAC_MODEL_TOHOSTCONFIG")       // DMA configuration costs
PARAM(ModelToHostTransferL1, float, 0.0007f, "GMAC_MODEL_TOHOSTTRANSFER_L1") // Transfer costs for data that fits in the L1 cache
PARAM(ModelToHostTransferL2, float, 0.0008f, "GMAC_MODEL_TOHOSTTRANSFER_L2") // Transfer costs for data that fits in the L2 cache
PARAM(ModelToHostTransferMem, float, 0.0010f, "GMAC_MODEL_TOHOSTTRANSFER_MEM") // Transfer costs for data that does not fit in the L2 cache
PARAM(ModelToDeviceConfig, float, 40.0, "GMAC_MODEL_TODEVICECONFIG")       // DMA configuration costs
PARAM(ModelToDeviceTransferL1, float, 0.0007f, "GMAC_MODEL_TODEVICETRANSFER_L1") // Transfer costs for data that fits in the L1 cache
PARAM(ModelToDeviceTransferL2, float, 0.0008f, "GMAC_MODEL_TODEVICETRANSFER_L2") // Transfer costs for data that fits in the L2 cache
PARAM(ModelToDeviceTransferMem, float, 0.0010f, "GMAC_MODEL_TODEVICETRANSFER_L2") // Transfer costs for data that does not fit in the L2 cache
PARAM(ModelL1, long_t, 32 * 1024, "GMAC_MODEL_L1") // Size of the L1 cache
PARAM(ModelL2, long_t, 256 * 1024, "GMAC_MODEL_L2") // Size of the L2 cache
